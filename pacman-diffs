#!/usr/bin/env bash
# finding .pacnew files and compare
# v1.1.0

pkgname='pacman-diffs'
AGE=360 # ne rechercher que ceux qui ont moins de 360 jours
EXT='pacnew'
ARCCHIVEDIR='/var/cache/pacman/pacnew'

c_red='\033[0m\033[31m'
c_green='\033[0m\033[32m'
c_yellow='\033[0m\033[33m'
c_end='\033[0m'
bold='\033[1m'

## default string constants {{{
    declare -A txt=(
        ['label']='differences of'
        ['error']='Error'
        ['notfound']='file not found'
        ['root']='This script must be run as root'
        ['files']='files'
        ['noarchive']='not in archives'
        ['erase']='You can erase this file'
        ['archiver']='archive in'
        ['view']='voir'
    )
    lg=$(locale 2>/dev/null | awk -F'=' '/^LANG/ {print $2}')    
    lg=${lg:0:2}
    dico="/usr/share/locale/${lg}/LC_MESSAGES/$pkgname"  
    if [ -f "$dico" ]; then
        . "$dico";
    fi    
#}}}

function error()
{
    echo -e "\033[41m${txt[error]}:\033[0m $1" >&2
}
function test_sudo() {
    if [[ $EUID -ne 0 ]]; then
        error "${txt[root]}"
        exit 1
    fi
}

function get_su(){
    local mysu=''
    if [ -f '/usr/bin/kdesu' ]; then
        mysu='kdesu'
    else
        [ -f '/usr/bin/gksu' ] && mysu='gksu'
    fi
    echo -n "$mysu"
}

function get_editor(){
    local ed=''
    if [ -f '/usr/bin/kompare' ]; then
        ed='/usr/bin/kompare'
    else
        [ -f '/usr/bin/diffuse' ] && ed='/usr/bin/diffuse'
    fi
    echo "$ed"
}

function archive()
{
    test_sudo
    local file="$1"
    local name="$2"
    file=$ARCCHIVEDIR${file/$name.$EXT/$(stat -c "%Y" "$1")-$name.$EXT}
    install -D "$1" "$file"
    echo "-- ${txt[archiver]} $file"
    file=$(dirname $file)
    # want only 2 last files
    nb=$(ls $file/*$name.$EXT | wc -l)
    if [ "$nb" -gt 2 ]; then
        ls -v $file/*$name.$EXT | head -$(($nb-2)) | xargs rm
    fi
}
function in_archive(){
    local file="$1"
    local name="$2"
    file=$ARCCHIVEDIR${file/$name.$EXT/*-$name.$EXT}
    nb=$(ls $file | wc -l)
    if [ "$nb" -gt "1" ]; then
        echo $(ls -v $file)
    else
        return 1
    fi
}

function read_ini(){
    local file="$1"
    local key="$2"
    local context=''
    while read line ; do
        echo $line | grep -qE '^(#|$)' && continue
        if [ $line == "[$key]" ] ; then
            context=$(echo $line | tr -d '[]')
            continue
        fi
        [[ $context != '' && ${line:0:1} == '[' ]] && return 0
        if [[ $context != '' ]]; then
            echo "$line"
        fi
    done < "$file"
}
function run_plugin(){
    local key="$1"
    local out=$(read_ini "/etc/pacman.d/$pkgname.conf" "$key")
    if [ -n "$out" ]; then
        echo "-------- plugin --------"
        # locale text first with $lg if exist
        local text=$(echo "$out" | awk -F'=' '/^'$lg'/ {print $2}')
        if [ -n "$text" ]; then
            echo -e "$c_yellow${text}$c_end"
        else
            text=$(echo "$out" | awk -F'=' '/^txt/ {print $2}')
            if [ -n "$text" ]; then
                echo -e "$c_yellow${text}$c_end"
            fi
        fi
        local url=$(echo "$out" | awk -F'=' '/^url/ {print $2}')
        if [ -n "$url" ]; then
            echo -e "${txt[view]}\t${url}"
        fi
        local exec=$(echo "$out" | awk -F'=' '/^exe/ {print $2}')
        if [ -n "$exec" ]; then
            echo ">$exec"
            eval "$exec"
        fi
        echo "-------- plugin --------"
    fi
}

function make_diff()
#TODO : test permission et faire sudo si besoin ou test_sudo() ?
{
    local file1="$1"
    local file2="$2"
    local key="$3"
    local original="$4"
    if [[ $(diff $file1 $file2|wc -l) -eq 0 ]]; then
        # can remove etc/pacnew
        echo -e "-- ${c_yellow}${txt[erase]}${c_end} : sudo rm $original"
    else
        IFS=$'\n'
        # < : removed       > : added
        diff $file1 $file2| grep -E "^>|^<" | while read line ; do
            if [ "${line::1}" = '<' ]; then c="$c_red-"; else c="$c_green+"; fi
            echo -e "$c ${line:2}$c_end"
        done   
        # find plugin
        run_plugin "$key"
    fi
}

function history_pacman()
{
    local history="$1"
    if [ "$history" -gt "0" ]; then
        grep "pacnew$" /var/log/pacman.log | sed -e "s/\[ALPM\] warning: //"
    else
        grep "pacnew$" /var/log/pacman.log| awk '{print $8}' | sort | uniq
    fi
}

function usage()
{
    echo "usage: pacman-diffs [options]"
    echo -e "\t -x extension (pacnew, pacsave...)"
    echo -e "\t -d since x days"
    echo -e "\t -l : list only - no diff"
    echo -e "\t -e filename : edit files"
    echo -e "\n\t -a archive pacnew in /var/cache/pacman/pacnew/"
    echo -e "\t -c compare archives"
    echo -e "\n\t -i pacman history"
    echo -e "\t -j pacman history files"
    exit
}

############## RUN ##############

while getopts "hd:x:le:acij" flags; do
	case $flags in
		h) usage;exit 0 ;;
		d) AGE="${OPTARG}" ;;
		x) EXT="${OPTARG}" ;;
		l) listing=1 ;;
		e) edit="${OPTARG}"; listing=1 ;;	
		a) archive=1; listing=1 ;;
		c) archive=1; archivediff=1 ;;
		i) history_pacman 1; exit ;;
		j) history_pacman 0; exit ;;
		:) error "Vous avez oubliÃ© un argument"; exit 1 ;;
		?) error "invalid Option"; exit 1 ;;
		*) error "*"; exit 1 ;;
	esac
done

find '/etc' -name "*.$EXT" -mtime -$AGE -type f 2> /dev/null | while read file ; do

    fname=$(basename "$file")
    fname="${fname%.$EXT}"
    ofile="$(dirname ${file})/${fname}"
    dfile=$(stat -c "%y" ${file} | awk '{print $1}')
    echo -e "\n$bold${fname}$c_end\n-- ${txt[label]} $file\t(${dfile})"
   
    if [ -f "$ofile" ]; then
    
        if [[ $archive -eq 1 ]]; then
            # cp in  /var/cache/pacman/pacnew/
            archive ${file} ${fname}
        fi
        
 
        if [[ $listing -ne 1 ]]; then
        
            if [[ $archivediff -eq 1 ]]; then
                files=$(in_archive ${file} ${fname})
                if [[ "$?" -ne "1" ]]; then
                        make_diff ${files} ${file} ${fname}
                        continue
                else
                    echo "2 ${txt[files]} \"${fname}\" ${txt[noarchive]}"
                    continue
                fi                
            fi
            
            make_diff ${ofile} ${file} ${fname} ${file}
        fi
    
        if [ "$edit" == "$fname" ]; then
            cmd="$(get_su) $(get_editor) $ofile $file"
            $cmd
        fi
    
    else
        echo -e "\t$bold ${txt[error]}:$c_end ${txt[notfound]} ? $ofile"
    fi
    
done

exit 0